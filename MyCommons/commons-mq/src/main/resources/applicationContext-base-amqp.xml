<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/rabbit
                http://www.springframework.org/schema/rabbit/spring-rabbit.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
        <!--配置扫描的controller-->
        <context:component-scan base-package="com.apollo.commons.mq"/>
        <!-- 连接服务配置  -->
        <rabbit:connection-factory id="connectionFactory" addresses="${amqp.host}"
                                   username="${amqp.username}"
                                   password="${amqp.password}"/>
        <rabbit:admin connection-factory="connectionFactory"/>

        <!-- spring template声明-->
        <rabbit:template exchange="test-mq-exchange" id="amqpTemplate"  connection-factory="connectionFactory"  message-converter="jsonMessageConverter"/>

        <!-- 消息对象json转换类 -->
         <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />

        <!-- 声明一个Que -->
        <rabbit:queue id="tl.queue.new" name="tl.queue.new" durable="true" auto-delete="false" exclusive="false" />
        <!--
        durable:是否持久化
        exclusive: 仅创建者可以使用的私有队列，断开后自动删除
        auto_delete: 当所有消费客户端连接断开后，是否自动删除队列
         -->

        <!-- 声明一个Exchange -->
        <rabbit:direct-exchange name="test-mq-exchange" durable="true" auto-delete="false" id="test-mq-exchange">
            <rabbit:bindings>
                <rabbit:binding queue="tl.queue.new" key="tl.queue.new"/>
            </rabbit:bindings>
        </rabbit:direct-exchange>
        <!--
        rabbit:direct-exchange：定义exchange模式为direct，意思就是消息与一个特定的路由键完全匹配，才会转发。
        rabbit:binding：设置消息queue匹配的key
        -->

    <!--&lt;!&ndash;死信队列&ndash;&gt;-->
    <!--<rabbit:queue name="dlq"/>-->

    <!--<rabbit:topic-exchange name="dlx">-->
        <!--<rabbit:bindings>-->
            <!--<rabbit:binding queue="dlq" pattern="tl.#"/>-->
        <!--</rabbit:bindings>-->
    <!--</rabbit:topic-exchange>-->

    <!--&lt;!&ndash;超时队列&ndash;&gt;-->
    <!--<rabbit:queue name="timeout_queue">-->
        <!--<rabbit:queue-arguments>-->
            <!--<entry key="x-dead-letter-exchange" value="dlx"/>-->
            <!--<entry key="x-dead-letter-routing-key" value="tl.timeout"/>-->
        <!--</rabbit:queue-arguments>-->
    <!--</rabbit:queue>-->

    <!--<rabbit:direct-exchange name="timeout_exchange">-->
        <!--<rabbit:bindings>-->
            <!--<rabbit:binding queue="timeout_queue" key="timeout.queue"/>-->
        <!--</rabbit:bindings>-->
    <!--</rabbit:direct-exchange>-->

    <!--<rabbit:queue name="logstash"/>-->

    <!--<rabbit:listener-container connection-factory="connectionFactory"-->
                               <!--advice-chain="interceptors"-->
                               <!--acknowledge="auto"-->
                               <!--message-converter="fastJsonMessageConverter">-->
        <!--<rabbit:listener ref="dlqListener" queues="dlq"/>-->
    <!--</rabbit:listener-container>-->

    <!--&lt;!&ndash;重连策略&ndash;&gt;-->
    <!--<util:list id="interceptors">-->
        <!--<bean id="retryInterceptor" class="org.springframework.amqp.rabbit.config.StatelessRetryOperationsInterceptorFactoryBean">-->
            <!--<property name="retryOperations">-->
                <!--<bean class="org.springframework.retry.support.RetryTemplate">-->
                    <!--<property name="retryPolicy">-->
                        <!--<bean class="org.springframework.retry.policy.NeverRetryPolicy"/>-->
                    <!--</property>-->
                <!--</bean>-->
            <!--</property>-->
        <!--</bean>-->
    <!--</util:list>-->

    <!--&lt;!&ndash; spring template声明&ndash;&gt;-->
    <!--<rabbit:template id="rabbitTemplate"-->
                     <!--exchange="st.topic.default"-->
                     <!--connection-factory="connectionFactory"-->
                     <!--message-converter="fastJsonMessageConverter"/>-->

    <!--<bean id="dlqListener" class="com.apollo.commons.mq.consumer.DLQListener">-->
        <!--<constructor-arg index="0" ref="rabbitTemplate"/>-->
        <!--<constructor-arg index="1" value="timeout_exchange"/>-->
        <!--<constructor-arg index="2" value="timeout.queue"/>-->
        <!--<constructor-arg index="3" value="${amqp.initial.interval:2000}"/>-->
        <!--<constructor-arg index="4" value="${amqp.max.retry:6}"/>-->
    <!--</bean>-->
</beans>
